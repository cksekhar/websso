<!DOCTYPE project>

<project name="ClareitySecuritySSO" default="usage" basedir=".">

	<!-- get access to the env vars -->
	<property environment="env" />

	<!-- use the build.properties file -->
	<property file="build.properties" />

	<!-- set the classpath -->
	<path id="compile.classpath">
		<fileset dir="${build.lib.dir}">
			<include name="**/*.jar" />
		</fileset>
		<pathelement location="${build.classes.dir}" />
	</path>

	<!-- describe the targets in this build -->
	<target name="usage" description="Build file usage info (default task)">

		<echo>Using SSO_HOME     = ${sso.home}</echo>
		<echo>Using SSO_LIB_HOME = ${lib.home}</echo>

		<echo message=" " />
		<echo message="${project.name} " />
		<echo message="-------------------------------------------------------" />
		<echo message=" " />
		<echo message="  clean     - Delete the build and dist directories and contents" />
		<echo message="  prepare   - Prepare directory structure and copy dependent libraries" />
		<echo message="  compile   - Compiles the source code" />
		<echo message="  jar       - Build jar file" />
		<echo message="  deploy    - Copy jar file to public lib folder" />
		<echo message="  javadoc   - Build java docs" />

	</target>

	<!-- clean up the environment -->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- setup the environment -->
	<target name="prepare">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${build.classes.dir}" />
		<mkdir dir="${build.lib.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${dist.dir}/lib" />
		<!-- copy the required jars -->
		<copy todir="${build.lib.dir}">
			<!-- The OpenSAML 2.2.2 support libraries -->
			<fileset dir="${lib.home}/opensaml-2.2.2/lib">
				<include name="*.jar" />
			</fileset>
			<!-- The OpenSAML 2.2.2 library -->
			<fileset dir="${lib.home}/opensaml-2.2.2">
				<include name="*.jar" />
			</fileset>
			<!-- The servlet library -->
			<fileset dir="${lib.home}/Servlet">
				<include name="*.jar"/>
			</fileset>
			<!-- The junit library -->
		     <fileset dir="${lib.home}/junit">
		        	<include name="junit-4.1.jar"/>
		    </fileset>
			<!-- The log4j library -->
		    <fileset dir="${lib.home}/log4j">
	        	<include name="log4j-1.2.14.jar"/>
		    </fileset>
		</copy>
	</target>

	<!-- compile the java classes -->
	<target name="compile" depends="prepare">
		<echo message="Compiling files" />

		<javac srcdir="${src.dir}" destdir="${build.classes.dir}" deprecation="true" failonerror="true" debug="true">
			<classpath refid="compile.classpath" />
		</javac>

	</target>

	<!-- build a jar file with everything needed in it -->
	<target name="jar" depends="prepare, compile">
		<!-- delete any prior jar file first -->
		<delete file="${dist.dir}/${dist.name}" />
		<jar jarfile="${dist.dir}/${dist.name}" manifest="${conf.dir}/MANIFEST.MF">
			<fileset dir="${build.classes.dir}" />
			<manifest>
				<attribute name="Creator" value="${user.name}" />
				<attribute name="Ant-Version" value="${ant.version}" />
				<attribute name="Implementation-Vendor" value="Clareity Security, LLC"/>
			    <attribute name="Implementation-Title" value="ClareitySecuritySSO"/>
			</manifest>
		</jar>
	</target>

	<target name="deploy" depends="jar">
		<!-- copy the output jar to the public folder -->
		<copy file="${dist.dir}/${dist.name}" todir="${lib.home}/ClareitySecuritySSO/" />
	</target>

	<!-- Build the Java docs -->
	<target name="javadoc">
		<delete dir="${javadoc.dir}" />
		<javadoc 
			destdir="${javadoc.dir}"
			windowtitle="Clareity Security SSO Toolkit"
			author="true"
			>
			<packageset dir="src" defaultexcludes="true">
				<include name="net/**"/>
			</packageset>
		</javadoc>
	</target>
	
    <!-- JUnit classpath == compile.classpath + build.classes.dir -->
  <path id="junit.classpath">
     <pathelement location="${build.classes.dir}"/>
     <pathelement location="${conf.dir}"/>

     <fileset dir="${build.lib.dir}">
        <include name="**/*.jar" />
     </fileset>
     <fileset dir="${lib.home}/junit">
        	<include name="junit-4.1.jar"/>
    </fileset>

  </path>
	
	  <target name="junit" depends="compile" description="Run JUnit test">

		  <junit printsummary="on" haltonfailure="yes" 
					  haltonerror="yes" fork="yes" maxmemory="512m" showoutput="yes">
	         <classpath refid="junit.classpath"/>
	         <formatter type="xml"/>
	         <batchtest todir="${test.results.dir}">
				 <fileset dir="${test.dir}">
	                 <include name="**/AuthUser.java"/> 
	             </fileset>
	         </batchtest>
	      </junit>

	  </target>
	
</project>
